service: appointment-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  environment:
      SNS_TOPIC_PE: arn:aws:sns:us-east-1:123456789012:appointments_PE
      SNS_TOPIC_CL: arn:aws:sns:us-east-1:123456789012:appointments_CL
      APPOINTMENTS_TABLE: Appointments
       RDS_PE_HOST: pe-db.cluster-xxxxx.us-east-1.rds.amazonaws.com
      RDS_PE_USER: admin
      RDS_PE_PASSWORD: pe_password
      RDS_PE_DB: appointments_pe
      RDS_CL_HOST: cl-db.cluster-yyyyy.us-east-1.rds.amazonaws.com
      RDS_CL_USER: admin
      RDS_CL_PASSWORD: cl_password
      RDS_CL_DB: appointments_cl

# functions for lambda with endpoints
functions:
  appointment:
    handler: src/lambdas/appointment.handler
    events:
      - http:
          path: /appointments
          method: post
      - http:
          path: /appointments/{insuredId}
          method: get
      - sqs:
          arn:
            Fn::GetAtt: [AppointmentConfirmationQueue, Arn]

  appointment_pe:
    handler: src/lambdas/appointment_pe.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SQSPEQueue, Arn]
  
  appointment_pe:
    handler: src/lambdas/appointment_cl.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SQSCLQueue, Arn]

plugins:
  - serverless-esbuild
  - serverless-offline

package:
  individually: true

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude: ['aws-sdk']
    target: node18
    platform: node
    concurrency: 10

resources:
  Resources:
    AppointmentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AppointmentTable
        AttributeDefinitions:
          - AttributeName: insuredId
            AttributeType: S
          - AttributeName: scheduleId
            AttributeType: N
        KeySchema:
          - AttributeName: insuredId
            KeyType: HASH
          - AttributeName: scheduleId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    SQSPEQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE
    SQSCLQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_CL
    AppointmentConfirmationQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: appointment-confirmation-queue
    AppointmentConfirmedRule:
      Type: AWS::Events::Rule
      Properties:
        EventPattern:
          source:
            - "appointment.service"
          detail-type:
            - "AppointmentConfirmed"
        Targets:
          - Arn:
              Fn::GetAtt: [AppointmentConfirmationQueue, Arn]
            Id: "SendToConfirmationQueue"
